load "OpenImage-master/main/FindOpenImage.m"; // Please modify the path according to local directory on your system.

// 64.96.3.c.1 

level := 64;
gens := [[3, 59, 32, 1], [5, 18, 48, 15], [33, 19, 48, 53], [47, 15, 48, 27], [59, 48, 0, 19]];
Grec:=CreateModularCurveRec(level,gens);
M:=FindModelOfXG(Grec,65)`psi; // this 65 is precision 
x:=AssociativeArray();
P:=ProjectiveSpace(Rationals(),4);
for i in [1..5] do;
    x[i]:=P.i;
end for;

C:=Curve(P,M);
IsHyperelliptic(C); // true

*******************************************************************************************************************

// 64.96.3.c.2

level := 64;
gens := [[11, 58, 32, 35], [15, 13, 0, 49], [35, 16, 0, 7], [47, 10, 16, 49], [59, 30, 16, 33]];
Grec:=CreateModularCurveRec(level,gens);
M:=FindModelOfXG(Grec,65)`psi;
x:=AssociativeArray();
P:=ProjectiveSpace(Rationals(),4);
for i in [1..5] do;
    x[i]:=P.i;
end for;

C:=Curve(P,M);
IsHyperelliptic(C); // true

*********************************************************************************************************************

// 64.96.3.d.1

level := 64;
gens := [[5, 31, 32, 1], [9, 39, 0, 5], [39, 2, 0, 3], [53, 22, 32, 19], [55, 56, 0, 47]];
Grec:=CreateModularCurveRec(level,gens);
M:=FindModelOfXG(Grec,65)`psi;
x:=AssociativeArray();
P:=ProjectiveSpace(Rationals(),4);
for i in [1..5] do;
    x[i]:=P.i;
end for;

C:=Curve(P,M);
IsHyperelliptic(C); // true

***********************************************************************************************************************

//64.96.3.d.2

level := 64;
gens := [[1, 46, 32, 55], [39, 17, 32, 35], [41, 21, 32, 47], [47, 21, 32, 1], [61, 57, 0, 3]];
Grec:=CreateModularCurveRec(level,gens);
M:=FindModelOfXG(Grec,65)`psi;
x:=AssociativeArray();
P:=ProjectiveSpace(Rationals(),4);
for i in [1..5] do;
    x[i]:=P.i;
end for;

C:=Curve(P,M);
IsHyperelliptic(C); // true

**************************************************************************************************************************

//16.48.3.j.1

P<x,y,z,w,t,u>:=ProjectiveSpace(Rationals(),5);
C:=Curve(P,[-x*t + y*z, -2*x*w + x*u + z^2 - w*u, 2*y^2 + z^2 - 2*w*u, 4*w^2 + 2*t^2 + u^2, 4*x^2 + w*u, 4*x*z + 2*y*t + 2*z*w - z*u, 4*x*y - 2*y*w + y*u + z*t]);

G:=AutomorphismGroup(C);
S:=Automorphisms(C);
for s in S do;
s1:=G!s;
if Order(s1) eq 2 then
AG:=AutomorphismGroup(C,[s1]);
CG:=CurveQuotient(AG);
if Genus(CG) eq 0 then
CG; // pointless
end if;
**************************************************************************************************************************
//16.48.3.l.1

P<x,y,z,w,t,u>:=ProjectiveSpace(Rationals(),5);
C:=Curve(P,[2*x*t + z^2 + w*u, -2*x*w - x*u + y*z, -2*x*t + 2*y^2 + w*u, 4*w^2 + 2*t^2 + u^2, 4*x^2 - x*t + y^2, 4*x*z + 2*y*w + y*u - z*t, 8*x*y + 2*y*t + 2*z*w + z*u]);

G:=AutomorphismGroup(C);
S:=Automorphisms(C);
for s in S do;
s1:=G!s;
if Order(s1) eq 2 then
AG:=AutomorphismGroup(C,[s1]);
CG:=CurveQuotient(AG);
if Genus(CG) eq 0 then
CG; // pointless
end if;
end if;
print "........";
end for;
**************************************************************************************************************************
//16.48.3.p.1

P<x,y,z,w,t,u>:=ProjectiveSpace(Rationals(),5);
C:=Curve(P,[x*u + y*z, -2*x*w - x*t + z^2 + w*t, y^2 + z^2 + 2*w*t, 4*w^2 + t^2 + u^2, 4*x^2 - w*t, 4*x*y - 2*y*w - y*t - z*u, 4*x*z - y*u + 2*z*w + z*t]);

G:=AutomorphismGroup(C);
S:=Automorphisms(C);
for s in S do;
s1:=G!s;
if Order(s1) eq 2 then
AG:=AutomorphismGroup(C,[s1]);
CG:=CurveQuotient(AG);
if Genus(CG) eq 0 then
CG; // pointless
end if;
end if;
print "........";
end for;

**************************************************************************************************************************

//16.48.3.z.1

P<x,y,z,w,t,u>:=ProjectiveSpace(Rationals(),5);
C:=Curve(P,[x*u + z^2 + w*t, 
-x*u + y^2 + w*t, 
-2*x*w - x*t + y*z, 
4*w^2 + t^2 + u^2, 
4*x^2 - w*t, 
4*x*z + 2*y*w + y*t - z*u, 
4*x*y + y*u + 2*z*w + z*t]);
s1:=iso<C->C|[x,z,y,t/2,2*w,-u],[x,z,y,t/2,2*w,-u]>;
s2:=iso<C->C|[x,z,y,w,t,-u],[x,z,y,w,t,-u]>;
phi:=s1*s2;
AG:=AutomorphismGroup(C,[phi]);
CG:=CurveQuotient(AG);
Genus(CG);CG; // pointless
**************************************************************************************************************************
//16.48.3.s.1

P<x,y,z,w,t,u>:=ProjectiveSpace(Rationals(),5);
C:=Curve(P,[2*x^2 - w*t, 
-x*u + y*z - z^2 - w*t, 
-x*u + y^2 + y*z + w*t, 
-2*x*w - x*t + y^2 - y*z + w*t, 
4*w^2 + t^2 + u^2, 
2*x*y - 2*x*z + 2*y*w + y*t + z*u, 
2*x*y + 2*x*z + y*u - 2*z*w - z*t]);
s1:=iso<C->C|[x,y,z,t/2,2*w,u],[x,y,z,t/2,2*w,u]>;

AG:=AutomorphismGroup(C,[s1]);
CG:=CurveQuotient(AG);
Genus(CG);CG; // pointless

**************************************************************************************************************************
//16.96.3.ex.1

P<x,y,z,w,t,u>:=ProjectiveSpace(Rationals(),5);
C:=Curve(P,[x^2 - x*y - x*z + y^2 + y*z + z^2, x^2 + x*w + x*u - y*w + y*u + z^2, x^2 - x*z - x*t - x*u - y*z - z^2 - z*w + z*u, x^2 - x*z + y^2 - y*z - y*t - y*u - z*w - z*u, x*z + x*t - x*u + 2*y^2 + y*z + y*w - y*t - z*t - z*u, x^2 - x*y + x*t - y*w + y*t + y*u - z*t + z*u - w*t - t^2 - u^2, x^2 + x*y - x*z - x*t - y*z + y*w + z*w + z*t + w^2 - w*t + u^2]);
G:=AutomorphismGroup(C);
S:=Automorphisms(C);
for s in S do;
s1:=G!s;
if Order(s1) eq 2 then
AG:=AutomorphismGroup(C,[s1]);
CG:=CurveQuotient(AG);
if Genus(CG) eq 0 then
CG;
HasRationalPoint(CG); // pointless
end if;
end if;
print "........";
end for;

**************************************************************************************************************************
//16.96.3.ez.1

P<x,y,z,w,t,u>:=ProjectiveSpace(Rationals(),5);
C:=Curve(P,[x*z - y*u + t*u, x*y - z*u - w*u, y^2 - y*t - z^2 - z*w, y^2 + z^2 + 2*u^2, 2*x*u + 2*y*z + y*w - z*t, 2*x^2 + y^2 - 2*y*t + z^2 + 2*z*w + w^2 + t^2, 2*x*u + y*z - y*w - z^2 + z*t + 4*w*t - u^2]);
G:=AutomorphismGroup(C);
S:=Automorphisms(C);
for s in S do;
s1:=G!s;
if Order(s1) eq 2 then
AG:=AutomorphismGroup(C,[s1]);
CG:=CurveQuotient(AG);
if Genus(CG) eq 0 then
CG;
HasRationalPoint(CG); // pointless
end if;
end if;
print "........";
end for;
